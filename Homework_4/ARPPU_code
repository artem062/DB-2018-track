WITH RECURSIVE cte AS
(
    SELECT MIN(CAST(payment_dttm AS DATE)) AS dt FROM payments
        UNION ALL
	SELECT cte.dt + INTERVAL 1 DAY
	  FROM cte
	WHERE cte.dt + INTERVAL 1 DAY <= (SELECT MAX(CAST(payment_dttm AS DATE)) AS dt FROM payments)
),
pu_for_day AS
(
    SELECT CAST(payment_dttm AS DATE) AS dt,
           COUNT(DISTINCT user_id) as user_cnt
      FROM payments
     GROUP BY dt
),
revenue AS
(
    SELECT CAST(payment_dttm AS DATE) AS dt,
           SUM(payment_sum) as user_cnt
      FROM payments
     GROUP BY dt
)
SELECT cte.dt,
       COALESCE(rev.user_cnt, 0) / COALESCE(pu.user_cnt, 1) AS ARPPU, rev.user_cnt, pu.user_cnt
  FROM cte
  LEFT JOIN pu_for_day AS pu ON cte.dt = pu.dt
  LEFT JOIN revenue AS rev ON cte.dt = rev.dt
  ORDER BY dt;
